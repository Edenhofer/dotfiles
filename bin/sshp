#!/usr/bin/expect

proc slurp {file} {
    set fh [open $file r]
    set ret [read $fh]
    close $fh
    return $ret
}

proc sleep_random {min max} {
		# Hack around missing float arithmetic in bash using printf
		exec bash -c "sleep \$(printf %.6f\\\\n \"\$((1000000 * ($min + RANDOM % ($max - $min)) / 1000 ))e-6\")"
		return 0
}

# Trap changes in width and height (sigwinch) and pass it to the child we
# spawned
trap {
 set rows [stty rows]
 set cols [stty columns]
 stty rows $rows columns $cols < $spawn_out(slave,name)
} WINCH

set timeout 2

set cmd [lrange $argv 2 end]
set password_path [lindex $argv 0]
set otp_path [lindex $argv 1]
set password [slurp $password_path]
set otp [exec oathtool --totp @$otp_path]

eval spawn $cmd
expect {
	-nocase "password:" {
		# sleep_random 800 1600
		send "$password\r"
		exp_continue
	}
	-nocase "otp:" {
		# sleep_random 500 1100
		send "$otp\r"
		exp_continue
	}
	-nocase "verification code:" {
		# sleep_random 500 1100
		send "$otp\r"
		exp_continue
	}
	timeout {
		interact
	}
}
